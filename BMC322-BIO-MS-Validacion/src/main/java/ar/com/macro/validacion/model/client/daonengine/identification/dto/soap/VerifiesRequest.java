//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.3.0 
// See <a href="https://javaee.github.io/jaxb-v2/">https://javaee.github.io/jaxb-v2/</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2021.09.14 at 09:18:33 PM ART 
//


package ar.com.macro.validacion.model.client.daonengine.identification.dto.soap;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlType;


/**
 * Verify the claim of Identity by matching the provided ClaimedIdentity against the ReferenceIdentities,
 *                     in the context of the specified Verification Policy. <p>
 * 
 *                     <b>Usage Scenario 1 - Verify a claim of Identity against a system managed Identity and its
 *                     Reference Biometric Data: </b> <p>
 * 
 *                     The ReferenceIdentity must contain the IdentityIdentifier for an Identity enrolled in the target
 *                     Domain. This IdentityIdentifier is validated against the target Domain.<p>
 * 
 *                     This IdentityIdentifier is used to retrieve the system managed Reference Biometric Data of the
 *                     ReferenceIdentities.<p>
 * 
 *                     The ClaimedIdentity must contain BiometricData. This BiometricData is verified against the system
 *                     managed Reference Biometric Data.<p> <p>
 * 
 * 
 *                     <b>Usage Scenario 2 - Verify a claim of Identity for a system managed Identity but using Client
 *                     supplied Reference Biometric Data: </b><p>
 * 
 *                     The ReferenceIdentity must contain the IdentityIdentifier for an Identity enrolled in the target
 *                     Domain. This IdentityIdentifier is validated against the target Domain.<p>
 * 
 *                     The ReferenceIdentity must also contain BiometricData. This BiometricData is verified against the
 *                     supplied ClaimedIdentity Biometric Data.<p>
 * 
 *                     The ClaimedIdentity must contain BiometricData. This BiometricData is verified against the supplied
 *                     Reference Biometric Data.<p> <p>
 * 
 * 
 *                     <b>Usage Scenario 3 - Verify a claim of Identity for a non system managed Identity: </b><p>
 * 
 *                     The ReferenceIdentity must contain BiometricData, but no IdentityIdentifier. This BiometricData is
 *                     verified against the supplied ClaimedIdentity Biometric Data.<p>
 * 
 *                     The ClaimedIdentity must contain BiometricData. This BiometricData is verified against the supplied
 *                     Reference Biometric Data.<p>
 * 
 *                     The ClaimedIdentity can optionally contain an IdentityIdentifier if the encounter and the claim of
 *                     Identity are required to be logged by the system. This claim of Identity is only ever logged and is
 *                     never validated against the target Domain.<p> <p>
 * 
 * <p>Java class for anonymous complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType&gt;
 *   &lt;complexContent&gt;
 *     &lt;extension base="{http://www.daon.com/ws/de}AbstractRequest"&gt;
 *       &lt;sequence&gt;
 *         &lt;element name="DomainIdentifier" type="{http://www.daon.com/ws/de}DomainIdentifier"/&gt;
 *         &lt;element name="VerificationPolicyIdentifier" type="{http://www.daon.com/ws/de}PolicyIdentifier"/&gt;
 *         &lt;element name="GroupIdentifier" type="{http://www.daon.com/ws/de}GroupIdentifier" minOccurs="0"/&gt;
 *         &lt;element name="TransformPolicyIdentifier" type="{http://www.daon.com/ws/de}PolicyIdentifier" minOccurs="0"/&gt;
 *         &lt;element name="ClaimedIdentity" type="{http://www.daon.com/ws/de}Identity"/&gt;
 *         &lt;element name="ReferenceIdentity" type="{http://www.daon.com/ws/de}Identity" maxOccurs="unbounded"/&gt;
 *         &lt;element name="VerifyParameters" type="{http://www.daon.com/ws/de}VerifyParameters" minOccurs="0"/&gt;
 *       &lt;/sequence&gt;
 *     &lt;/extension&gt;
 *   &lt;/complexContent&gt;
 * &lt;/complexType&gt;
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "", propOrder = {
    "domainIdentifier",
    "verificationPolicyIdentifier",
    "groupIdentifier",
    "transformPolicyIdentifier",
    "claimedIdentity",
    "referenceIdentity",
    "verifyParameters"
})
@XmlRootElement(name = "VerifiesRequest")
public class VerifiesRequest
    extends AbstractRequest
{

    @XmlElement(name = "DomainIdentifier", required = true)
    protected DomainIdentifier domainIdentifier;
    @XmlElement(name = "VerificationPolicyIdentifier", required = true)
    protected PolicyIdentifier verificationPolicyIdentifier;
    @XmlElement(name = "GroupIdentifier")
    protected GroupIdentifier groupIdentifier;
    @XmlElement(name = "TransformPolicyIdentifier")
    protected PolicyIdentifier transformPolicyIdentifier;
    @XmlElement(name = "ClaimedIdentity", required = true)
    protected Identity claimedIdentity;
    @XmlElement(name = "ReferenceIdentity", required = true)
    protected List<Identity> referenceIdentity;
    @XmlElement(name = "VerifyParameters")
    protected VerifyParameters verifyParameters;

    /**
     * Gets the value of the domainIdentifier property.
     * 
     * @return
     *     possible object is
     *     {@link DomainIdentifier }
     *     
     */
    public DomainIdentifier getDomainIdentifier() {
        return domainIdentifier;
    }

    /**
     * Sets the value of the domainIdentifier property.
     * 
     * @param value
     *     allowed object is
     *     {@link DomainIdentifier }
     *     
     */
    public void setDomainIdentifier(DomainIdentifier value) {
        this.domainIdentifier = value;
    }

    /**
     * Gets the value of the verificationPolicyIdentifier property.
     * 
     * @return
     *     possible object is
     *     {@link PolicyIdentifier }
     *     
     */
    public PolicyIdentifier getVerificationPolicyIdentifier() {
        return verificationPolicyIdentifier;
    }

    /**
     * Sets the value of the verificationPolicyIdentifier property.
     * 
     * @param value
     *     allowed object is
     *     {@link PolicyIdentifier }
     *     
     */
    public void setVerificationPolicyIdentifier(PolicyIdentifier value) {
        this.verificationPolicyIdentifier = value;
    }

    /**
     * Gets the value of the groupIdentifier property.
     * 
     * @return
     *     possible object is
     *     {@link GroupIdentifier }
     *     
     */
    public GroupIdentifier getGroupIdentifier() {
        return groupIdentifier;
    }

    /**
     * Sets the value of the groupIdentifier property.
     * 
     * @param value
     *     allowed object is
     *     {@link GroupIdentifier }
     *     
     */
    public void setGroupIdentifier(GroupIdentifier value) {
        this.groupIdentifier = value;
    }

    /**
     * Gets the value of the transformPolicyIdentifier property.
     * 
     * @return
     *     possible object is
     *     {@link PolicyIdentifier }
     *     
     */
    public PolicyIdentifier getTransformPolicyIdentifier() {
        return transformPolicyIdentifier;
    }

    /**
     * Sets the value of the transformPolicyIdentifier property.
     * 
     * @param value
     *     allowed object is
     *     {@link PolicyIdentifier }
     *     
     */
    public void setTransformPolicyIdentifier(PolicyIdentifier value) {
        this.transformPolicyIdentifier = value;
    }

    /**
     * Gets the value of the claimedIdentity property.
     * 
     * @return
     *     possible object is
     *     {@link Identity }
     *     
     */
    public Identity getClaimedIdentity() {
        return claimedIdentity;
    }

    /**
     * Sets the value of the claimedIdentity property.
     * 
     * @param value
     *     allowed object is
     *     {@link Identity }
     *     
     */
    public void setClaimedIdentity(Identity value) {
        this.claimedIdentity = value;
    }

    /**
     * Gets the value of the referenceIdentity property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the referenceIdentity property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getReferenceIdentity().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link Identity }
     * 
     * 
     */
    public List<Identity> getReferenceIdentity() {
        if (referenceIdentity == null) {
            referenceIdentity = new ArrayList<Identity>();
        }
        return this.referenceIdentity;
    }

    /**
     * Gets the value of the verifyParameters property.
     * 
     * @return
     *     possible object is
     *     {@link VerifyParameters }
     *     
     */
    public VerifyParameters getVerifyParameters() {
        return verifyParameters;
    }

    /**
     * Sets the value of the verifyParameters property.
     * 
     * @param value
     *     allowed object is
     *     {@link VerifyParameters }
     *     
     */
    public void setVerifyParameters(VerifyParameters value) {
        this.verifyParameters = value;
    }

}
